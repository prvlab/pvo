#Область ПрограммныйИнтерфейс

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати – ТаблицаЗначений – состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Счет на оплату
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.ЗаявкаНаОформлениеПоездки";
	КомандаПечати.Идентификатор = "ПФ_MXL_ЗаявкаНаОформлениеПоездки";                     
	//КомандаПечати.МестоРазмещения = "<ИмяПодменюНаФорме>";
	КомандаПечати.Представление = НСтр("ru = 'Печать заявки'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	//КомандаПечати.Порядок = 1;
	//КомандаПечати.Картинка = БиблиотекаКартинок.ПечатьСразу;
	//КомандаПечати.СразуНаПринтер = Истина;
	

КонецПроцедуры

#КонецОбласти    

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	//ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "ПФ_MXL_ЗаявкаНаОформлениеПоездки");
	//Если ПечатнаяФорма <> Неопределено Тогда
	//    ПечатнаяФорма.ТабличныйДокумент = ПечатьЗаявки(МассивОбъектов, ОбъектыПечати);
	//    ПечатнаяФорма.СинонимМакета = НСтр("ru = 'Печать заявки'");
	//    ПечатнаяФорма.ПолныйПутьКМакету = "Документ.ЗаявкаНаОформлениеПоездки.ПФ_MXL_ЗаявкаНаОформлениеПоездки";
	//КонецЕсли;
	
	//Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЗаявкаНаОформлениеПоездки") Тогда
	//	УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
	//		КоллекцияПечатныхФорм,
	//		"Накладная",
	//		НСтр("ru = 'Реализация товаров'"),
	//		ПечатьЗаявки(МассивОбъектов, ОбъектыПечати),
	//		,
	//		"Документ.ЗаявкаНаОформлениеПоездки.ПФ_MXL_ЗаявкаНаОформлениеПоездки");
	//КонецЕсли;

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ЗаявкаНаОформлениеПоездки") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ПФ_MXL_ЗаявкаНаОформлениеПоездки",
			НСтр("ru = 'Печать заявки'"),
			ПечатьЗаявки(МассивОбъектов, ОбъектыПечати),
			,
			"Документ.ЗаявкаНаОформлениеПоездки.ПФ_MXL_ЗаявкаНаОформлениеПоездки");
	КонецЕсли;
	
КонецПроцедуры 

Функция ПечатьЗаявки(МассивОбъектов, ОбъектыПечати)
	
	// Создаем табличный документ и устанавливаем имя параметров печати.
    ТабличныйДокумент = Новый ТабличныйДокумент;
    ТабличныйДокумент.КлючПараметровПечати = "ПФ_MXL_ЗаявкаНаОформлениеПоездки";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ЗаявкаНаОформлениеПоездки.ПФ_MXL_ЗаявкаНаОформлениеПоездки");
	
    // Получаем запросом необходимые данные.
    Запрос = Новый Запрос();
    Запрос.Текст =
    "ВЫБРАТЬ
    |	ТаблицаДокумента.Ссылка КАК Ссылка,
    |	ТаблицаДокумента.Номер КАК Номер,
    |	ТаблицаДокумента.Дата КАК Дата,
    |	ТаблицаДокумента.Клиент КАК Клиент,
    |	ТаблицаДокумента.БонуснаяКарта КАК БонуснаяКарта,
    |	ТаблицаДокумента.ЗаказБилетов КАК ЗаказБилетов,
    |	ТаблицаДокумента.Примечание КАК Примечание,
    |	ТаблицаДокумента.Гостиница КАК Гостиница,
    |	ТаблицаДокумента.Контрагент КАК Контрагент,
    |	ТаблицаДокумента.Договор КАК Договор,
    |	ТаблицаДокумента.Мероприятие КАК Мероприятие,
    |	ТаблицаДокумента.ОснованиеФинансирования КАК ОснованиеФинансирования,
    |	ТаблицаДокумента.КонтактноеЛицо КАК КонтактноеЛицо,
    |	ТаблицаДокумента.Телефон КАК Телефон,
    |	ТаблицаДокумента.Факс КАК Факс,
    |	ТаблицаДокумента.Email КАК Email,
    |	ТаблицаДокумента.Должность КАК Должность,
    |	ТаблицаДокумента.ПереводПримечание КАК ПереводПримечание,
    |	ТаблицаДокумента.ПрГостиница КАК ПрГостиница,
    |	ТаблицаДокумента.ПрПереводчики КАК ПрПереводчики,
    |	ТаблицаДокумента.ПриПитание КАК ПриПитание,
    |	ТаблицаДокумента.ПрТранспорт КАК ПрТранспорт,
    |	ТаблицаДокумента.АрендаПлощадки КАК АрендаПлощадки,
    |	ТаблицаДокумента.ТехническоеОборудование КАК ТехническоеОборудование,
    |	ТаблицаДокумента.УслугиФотографа КАК УслугиФотографа,
    |	ТаблицаДокумента.Маршрут.(
    |		Ссылка КАК Ссылка,
    |		НомерСтроки КАК НомерСтроки,
    |		ДатаОтбытия КАК ДатаОтбытия,
    |		Откуда КАК Откуда,
    |		Куда КАК Куда,
    |		Класс КАК Класс
    |	) КАК Маршрут,
    |	ТаблицаДокумента.Размещение.(
    |		Ссылка КАК Ссылка,
    |		НомерСтроки КАК НомерСтроки,
    |		ДатаПрибытия КАК ДатаПрибытия,
    |		ДатаОтбытия КАК ДатаОтбытия,
    |		Отель КАК Отель,
    |		КатегорияКомнаты КАК КатегорияКомнаты,
    |		Примечание КАК Примечание,
    |		Город КАК Город,
    |		Трансфер КАК ВидЗаезда
    |	) КАК Размещение,
    |	ТаблицаДокумента.ТранспортныеУслуги.(
    |		Ссылка КАК Ссылка,
    |		НомерСтроки КАК НомерСтроки,
    |		Дата КАК Дата,
    |		ВидТС КАК ВидТС,
    |		КлассТС КАК КлассТС,
    |		Услуга КАК Услуга,
    |		КоличествоАвто КАК КоличествоАвто,
    |		ЕдиницаИзмерения КАК ЕдиницаИзмерения,
    |		ОбъемУслуги КАК ОбъемУслуги,
    |		Маршрут КАК Маршрут
    |	) КАК ТранспортныеУслуги,
    |	ТаблицаДокумента.Питание.(
    |		Ссылка КАК Ссылка,
    |		НомерСтроки КАК НомерСтроки,
    |		Дата КАК Дата,
    |		ТипПитания КАК ТипПитания,
    |		Количество КАК Количество
    |	) КАК Питание,
    |	ТаблицаДокумента.Переводчики.(
    |		Ссылка КАК Ссылка,
    |		НомерСтроки КАК НомерСтроки,
    |		ДатаМероприятия КАК ДатаМероприятия,
    |		ВремяС КАК ВремяС,
    |		ВремяПо КАК ВремяПо,
    |		ЯзыкПереводаС КАК ЯзыкПереводаС,
    |		ЯзыкПереводаНа КАК ЯзыкПереводаНа,
    |		Примечание КАК Примечание
    |	) КАК Переводчики,
    |	ТаблицаДокумента.Экскурсии.(
    |		Ссылка КАК Ссылка,
    |		НомерСтроки КАК НомерСтроки,
    |		ДатаЭкскурсии КАК ДатаЭкскурсии,
    |		Наименование КАК Наименование,
    |		МестоПроведения КАК МестоПроведения,
    |		Продолжительность КАК Продолжительность,
    |		ЧислоЭкскурсантов КАК ЧислоЭкскурсантов,
    |		Примечание КАК Примечание
    |	) КАК Экскурсии
    |ИЗ
    |	Документ.ЗаявкаНаОформлениеПоездки КАК ТаблицаДокумента
    |ГДЕ
    |	ТаблицаДокумента.Ссылка В(&МассивОбъектов)
    |
    |УПОРЯДОЧИТЬ ПО
    |	ДатаПрибытия,
    |	ДатаОтбытия,
    |	Дата,
    |	Дата,
    |	ДатаМероприятия,
    |	ДатаЭкскурсии";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	РезультатЗапроса = Запрос.Выполнить();
    Шапка = РезультатЗапроса.Выбрать();
    
    ПервыйДокумент = Истина;
    
    Пока Шапка.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
            // Все документы нужно выводить на разных страницах.
            ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
        КонецЕсли;
        ПервыйДокумент = Ложь;
        // Запомним номер строки, с которой начали выводить текущий документ.
        НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
	
		//...алгоритм заполнения табличного документа...
		МассивОбластейМакета = Новый Массив;
		МассивОбластейМакета.Добавить("Шапка");
		МассивОбластейМакета.Добавить("ШапкаТаблицыКонтактноеЛицо");
		МассивОбластейМакета.Добавить("СтрокаТаблицыКЛ");
		МассивОбластейМакета.Добавить("ШапкаПассажир");
		МассивОбластейМакета.Добавить("СтрокаПассажир");
		МассивОбластейМакета.Добавить("СтрокаПаспортныеДанные");
		МассивОбластейМакета.Добавить("СтрокаБонуснаяКарта");
		МассивОбластейМакета.Добавить("СтрокаЗаказБилетов");
		МассивОбластейМакета.Добавить("ШапкаМаршрутСледования");
		//МассивОбластейМакета.Добавить("ШапкаЭкскурсии");
		//МассивОбластейМакета.Добавить("СтрокаМаршрутСледования");
		////
		ДанныеПечати = Новый Структура;
		
		ДанныеПечати.Вставить("Номер", Число(Шапка.Номер));
		ДанныеПечати.Вставить("НомерДоговора", Шапка.Договор.НомерДоговора);
		ДанныеПечати.Вставить("ДатаДоговора", Формат(Шапка.Договор.ДатаДоговора, "ДФ=dd.MM.yyyy"));
		
		ДанныеПечати.Вставить("Дата", Формат(Шапка.Дата, "ДЛФ=D")); 
		ДанныеПечати.Вставить("КонтактноеЛицо", ФамилияИО(Шапка.КонтактноеЛицо)); 
		ДанныеПечати.Вставить("Телефон", Шапка.Телефон);
		ДанныеПечати.Вставить("Факс", Шапка.Факс);
		ДанныеПечати.Вставить("Email", Шапка.Email);
		// СтрокаПассажир
		ДанныеПечати.Вставить("Фамилия", Шапка.Клиент.Фамилия);
		ДанныеПечати.Вставить("Имя", Шапка.Клиент.Имя);
		ДанныеПечати.Вставить("Отчество", Шапка.Клиент.Отчество);	
        // СтрокаПаспортныеДанные 
		ДанныеПечати.Вставить("Паспорт", Шапка.Клиент.ПаспортныеДанные); 
		ДанныеПечати.Вставить("СрокДействия", Шапка.Клиент.СрокДействия); 
		ДанныеПечати.Вставить("ДатаРождения", Шапка.Клиент.ДатаРождения);
		ДанныеПечати.Вставить("Гражданство", Шапка.Клиент.Гражданство);
		// СтрокаБонуснаяКарта
		ДанныеПечати.Вставить("БонуснаяКарта", Шапка.БонуснаяКарта);
		// СтрокаЗаказБилетов
		ДанныеПечати.Вставить("Примечание", Шапка.Примечание);
		ЗаказБилетовЗначение = Шапка.ЗаказБилетов;
		Если НРег(ЗаказБилетовЗначение) = "авиа" Тогда	
			ДанныеПечати.Вставить("Авиа", Истина);
		Иначе 			
			ДанныеПечати.Вставить("ЖД", Истина);
		КонецЕсли;
				
		Для Каждого ИмяОбласти Из МассивОбластейМакета Цикл
			ОбластьМакета = Макет.ПолучитьОбласть(ИмяОбласти);
				ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ДанныеПечати);
				ТабличныйДокумент.Вывести(ОбластьМакета);
		КонецЦикла;		

		//СтрокаМаршрутСледования
		Область = Макет.ПолучитьОбласть("СтрокаМаршрутСледования");
		ДанныеПечатиМаршрутСледования = Новый Структура;
		МассивМаршрутСледования = Шапка.Маршрут.Выбрать();
		Если МассивМаршрутСледования.Количество() > 0 Тогда
			Пока МассивМаршрутСледования.Следующий() Цикл
						ДанныеПечатиМаршрутСледования.Вставить("ДатаОтбытия", Формат(МассивМаршрутСледования.ДатаОтбытия, "ДФ=dd.MM.yyyy"));
						ДанныеПечатиМаршрутСледования.Вставить("Откуда", МассивМаршрутСледования.Откуда);
	     				ДанныеПечатиМаршрутСледования.Вставить("Куда", МассивМаршрутСледования.Куда);
						ДанныеПечатиМаршрутСледования.Вставить("МаршрутКласс", МассивМаршрутСледования.Класс);
						ЗаполнитьЗначенияСвойств(Область.Параметры, ДанныеПечатиМаршрутСледования);
						ТабличныйДокумент.Вывести(Область);
			КонецЦикла;
		Иначе
		   				ДанныеПечатиМаршрутСледования.Вставить("ДатаОтбытия", "");
						ДанныеПечатиМаршрутСледования.Вставить("Откуда", "");
	     				ДанныеПечатиМаршрутСледования.Вставить("Куда", "");
						ДанныеПечатиМаршрутСледования.Вставить("МаршрутКласс", "");
						ЗаполнитьЗначенияСвойств(Область.Параметры, ДанныеПечатиМаршрутСледования);
						ТабличныйДокумент.Вывести(Область);
				
        КонецЕсли;
		//ШапкаГостиница
		Область = Макет.ПолучитьОбласть("ШапкаГостиница");
		ТабличныйДокумент.Вывести(Область);
		//СтрокаГостиница
		Область = Макет.ПолучитьОбласть("СтрокаГостиница");
		ДанныеПечатиСтрокаГостиница = Новый Структура; 
		
		ОбластьСтрокаГостиницаЗаезд = Макет.ПолучитьОбласть("СтрокаГостиницаЗаезд");
		ДанныеПечатиСтрокаГостиницаЗаезд = Новый Структура;
		
		МассивСтрокаГостиница = Шапка.Размещение.Выбрать(); 
		
		Если  МассивСтрокаГостиница.Количество() > 0 Тогда
			
		Пока МассивСтрокаГостиница.Следующий() Цикл
					ДанныеПечатиСтрокаГостиница.Вставить("ГостиницаДатаПрибытия", Формат(МассивСтрокаГостиница.ДатаПрибытия, "ДФ=dd.MM.yyyy"));
					ДанныеПечатиСтрокаГостиница.Вставить("ГостиницаДатаОтбытия", Формат(МассивСтрокаГостиница.ДатаОтбытия, "ДФ=dd.MM.yyyy"));
					ДанныеПечатиСтрокаГостиница.Вставить("Отель", МассивСтрокаГостиница.Отель + Символы.Таб + "/" + Символы.Таб +  МассивСтрокаГостиница.КатегорияКомнаты);
					ДанныеПечатиСтрокаГостиница.Вставить("Город", МассивСтрокаГостиница.Город);
					ДанныеПечатиСтрокаГостиница.Вставить("Страна", МассивСтрокаГостиница.Город.Страна);
					ЗаполнитьЗначенияСвойств(Область.Параметры, ДанныеПечатиСтрокаГостиница); 
					ТабличныйДокумент.Вывести(Область); 
					
					//
					ДанныеПечатиСтрокаГостиницаЗаезд.Вставить("ВидЗаезда", МассивСтрокаГостиница.ВидЗаезда);
					ЗаполнитьЗначенияСвойств(ОбластьСтрокаГостиницаЗаезд.Параметры, ДанныеПечатиСтрокаГостиницаЗаезд); 
					ТабличныйДокумент.Вывести(ОбластьСтрокаГостиницаЗаезд);
					//
					
		КонецЦикла;
		Иначе
		        	ДанныеПечатиСтрокаГостиница.Вставить("ГостиницаДатаПрибытия", "");
					ДанныеПечатиСтрокаГостиница.Вставить("ГостиницаДатаОтбытия", "");
					ДанныеПечатиСтрокаГостиница.Вставить("Отель", "");
					ДанныеПечатиСтрокаГостиница.Вставить("Город", "");
					ДанныеПечатиСтрокаГостиница.Вставить("Страна", "");
					ЗаполнитьЗначенияСвойств(Область.Параметры, ДанныеПечатиСтрокаГостиница); 
					ТабличныйДокумент.Вывести(Область);
		КонецЕсли;
		//  ШапкаТрансфер
		Область = Макет.ПолучитьОбласть("ШапкаТрансфер");
		Если Шапка.ТранспортныеУслуги.Выбрать().Количество()> 0 Тогда
			Область.Параметры.ТрансферДа = " V ";
			Область.Параметры.ТрансферНет = "";
		Иначе
			Область.Параметры.ТрансферНет = " V ";
			Область.Параметры.ТрансферДа = "";
		КонецЕсли;
		ТабличныйДокумент.Вывести(Область);	
		// СтрокаТрансфер - выводим данные по трансферу или аренде  (Параметр: ДанныеТрансфера)
		Область = Макет.ПолучитьОбласть("СтрокаТрансфер");
		ДанныеПечатиСтрокаТрансфер = Новый Структура;
		МассивСтрокаТрансфер = Шапка.ТранспортныеУслуги.Выбрать();
		Если  МассивСтрокаТрансфер.Количество() > 0 Тогда
			Темп = "";
			Пока МассивСтрокаТрансфер.Следующий() Цикл
				Темп = Формат(МассивСтрокаТрансфер.Дата, "ДФ=dd.MM.yyyy") + Символы.Таб + МассивСтрокаТрансфер.Услуга 
		 							+ Символы.Таб + "Вид ТС: " + МассивСтрокаТрансфер.ВидТС + Символы.Таб + "Класс: " + МассивСтрокаТрансфер.КлассТС 
									+ Символы.Таб + "Кол-во авто: " + МассивСтрокаТрансфер.КоличествоАвто 
									+ Символы.Таб + "Маршрут следования: " +МассивСтрокаТрансфер.Маршрут;
				
				ДанныеПечатиСтрокаТрансфер.Вставить("ДанныеТрансфера", Темп);		
			 	ЗаполнитьЗначенияСвойств(Область.Параметры, ДанныеПечатиСтрокаТрансфер); 
			 	ТабличныйДокумент.Вывести(Область);	
		    КонецЦикла;
		Иначе
			 ДанныеПечатиСтрокаТрансфер.Вставить("ДанныеТрансфера", "");		
			 ЗаполнитьЗначенияСвойств(Область.Параметры, ДанныеПечатиСтрокаТрансфер); 
			 ТабличныйДокумент.Вывести(Область);
		КонецЕсли;

		// Питание
		Область = Макет.ПолучитьОбласть("ШапкаПитание");
		ТабличныйДокумент.Вывести(Область);
		//СтрокаПитание
		

		Область = Макет.ПолучитьОбласть("СтрокаПитание");
		ДанныеПечатиСтрокаПитание = Новый Структура;
		МассивСтрокаПитание = Шапка.Питание.Выбрать();
		Если  МассивСтрокаПитание.Количество() > 0 Тогда
		
		Пока МассивСтрокаПитание.Следующий() Цикл
					ДанныеПечатиСтрокаПитание.Вставить("ДатаПитания", Формат(МассивСтрокаПитание.Дата, "ДФ=dd.MM.yyyy"));
					ДанныеПечатиСтрокаПитание.Вставить("ТипПитания", МассивСтрокаПитание.ТипПитания);
					ДанныеПечатиСтрокаПитание.Вставить("КоличествоПитания", МассивСтрокаПитание.Количество);
					ЗаполнитьЗначенияСвойств(Область.Параметры, ДанныеПечатиСтрокаПитание); 
					ТабличныйДокумент.Вывести(Область);
		КонецЦикла;
		Иначе
		   			ДанныеПечатиСтрокаПитание.Вставить("ДатаПитания", "");
					ДанныеПечатиСтрокаПитание.Вставить("ТипПитания", "");
					ДанныеПечатиСтрокаПитание.Вставить("КоличествоПитания", "");
					ЗаполнитьЗначенияСвойств(Область.Параметры, ДанныеПечатиСтрокаПитание); 
					ТабличныйДокумент.Вывести(Область);
		
		КонецЕсли;
		
		
		//Перевод		
		Область = Макет.ПолучитьОбласть("ШапкаПеревод");
		ТабличныйДокумент.Вывести(Область);
		//СтрокаПеревод
		
		Область = Макет.ПолучитьОбласть("СтрокаПеревод");
		ДанныеПечатиСтрокаПеревод = Новый Структура;
		МассивСтрокаПеревод = Шапка.Переводчики.Выбрать();
		Если  МассивСтрокаПеревод.Количество() > 0 Тогда
		
		Пока МассивСтрокаПеревод.Следующий() Цикл
					ДанныеПечатиСтрокаПеревод.Вставить("ДатаПеревода", Формат(МассивСтрокаПеревод.ДатаМероприятия, "ДФ=dd.MM.yyyy")); 
					ДанныеПечатиСтрокаПеревод.Вставить("ВремяС", Формат(МассивСтрокаПеревод.ВремяС, "ДФ=чч:мм")); 
					ДанныеПечатиСтрокаПеревод.Вставить("ВремяПо", Формат(МассивСтрокаПеревод.ВремяПо, "ДФ=чч:мм"));
					ДанныеПечатиСтрокаПеревод.Вставить("ЯзыкПеревода",СтрШаблон("%1 - %2", МассивСтрокаПеревод.ЯзыкПереводаС, МассивСтрокаПеревод.ЯзыкПереводаНа));
					ДанныеПечатиСтрокаПеревод.Вставить("Примечание", МассивСтрокаПеревод.Примечание);
					ЗаполнитьЗначенияСвойств(Область.Параметры, ДанныеПечатиСтрокаПеревод); 
					ТабличныйДокумент.Вывести(Область);
		КонецЦикла;
		Иначе
		   			ДанныеПечатиСтрокаПеревод.Вставить("ДатаПеревода", ""); 
					ДанныеПечатиСтрокаПеревод.Вставить("ВремяС", ""); 
					ДанныеПечатиСтрокаПеревод.Вставить("ВремяПо", "");
					ДанныеПечатиСтрокаПеревод.Вставить("ЯзыкПеревода","");
					ДанныеПечатиСтрокаПеревод.Вставить("Примечание", "");
					ЗаполнитьЗначенияСвойств(Область.Параметры, ДанныеПечатиСтрокаПеревод); 
					ТабличныйДокумент.Вывести(Область);
		
		КонецЕсли;

		
		
//Экскурсии		
		Область = Макет.ПолучитьОбласть("ШапкаЭкскурсии");
		ТабличныйДокумент.Вывести(Область);
		//СтрокаЭкскурсии
		
		Область = Макет.ПолучитьОбласть("СтрокаЭкскурсии");
		ДанныеПечатиСтрокаЭкскурсии = Новый Структура;
		МассивСтрокаЭкскурсии = Шапка.Экскурсии.Выбрать();
		Если  МассивСтрокаЭкскурсии.Количество() > 0 Тогда
		
		Пока МассивСтрокаЭкскурсии.Следующий() Цикл
					ДанныеПечатиСтрокаЭкскурсии.Вставить("ДатаЭкскурсии", Формат(МассивСтрокаЭкскурсии.ДатаЭкскурсии, "ДФ=dd.MM.yyyy")); 
					ДанныеПечатиСтрокаЭкскурсии.Вставить("Наименование", МассивСтрокаЭкскурсии.Наименование); 
					ДанныеПечатиСтрокаЭкскурсии.Вставить("МестоПроведения", МассивСтрокаЭкскурсии.МестоПроведения); 
					ДанныеПечатиСтрокаЭкскурсии.Вставить("Продолжительность", МассивСтрокаЭкскурсии.Продолжительность);
					ДанныеПечатиСтрокаЭкскурсии.Вставить("ЧислоЭкскурсантов", МассивСтрокаЭкскурсии.ЧислоЭкскурсантов);
					ДанныеПечатиСтрокаЭкскурсии.Вставить("Примечание", МассивСтрокаЭкскурсии.Примечание);
					ЗаполнитьЗначенияСвойств(Область.Параметры, ДанныеПечатиСтрокаЭкскурсии); 
					ТабличныйДокумент.Вывести(Область);
		КонецЦикла;
		Иначе
		   			ДанныеПечатиСтрокаЭкскурсии.Вставить("ДатаЭкскурсии", ""); 
					ДанныеПечатиСтрокаЭкскурсии.Вставить("Наименование", ""); 
					ДанныеПечатиСтрокаЭкскурсии.Вставить("МестоПроведения", "");
					ДанныеПечатиСтрокаЭкскурсии.Вставить("Продолжительность","");
					ДанныеПечатиСтрокаЭкскурсии.Вставить("ЧислоЭкскурсантов", "");
					ДанныеПечатиСтрокаЭкскурсии.Вставить("Примечание", "");
					ЗаполнитьЗначенияСвойств(Область.Параметры, ДанныеПечатиСтрокаЭкскурсии); 
					ТабличныйДокумент.Вывести(Область);		
		КонецЕсли;
		
		//Аренда площадки
		Если ЗначениеЗаполнено(Шапка.АрендаПлощадки) Тогда
			Область = Макет.ПолучитьОбласть("ШапкаАрендаПлощадки");
			Область.Параметры.АрендаПлощадки = Шапка.АрендаПлощадки;
			ТабличныйДокумент.Вывести(Область);	
		КонецЕсли; 

		//Техническое оборудование 
		Если ЗначениеЗаполнено(Шапка.ТехническоеОборудование) Тогда
			Область = Макет.ПолучитьОбласть("ШапкаТехничекоеОборудование");
			Область.Параметры.ТехническоеОборудование = Шапка.ТехническоеОборудование; 
			ТабличныйДокумент.Вывести(Область);	
		КонецЕсли;
		// Услуги фотографа 
		Если ЗначениеЗаполнено(Шапка.УслугиФотографа) Тогда
			Область = Макет.ПолучитьОбласть("ШапкаУслугиФотографа");
			Область.Параметры.УслугиФотографа = Шапка.УслугиФотографа; 
			ТабличныйДокумент.Вывести(Область);	
		КонецЕсли;
		//  Ответственный
		Область = Макет.ПолучитьОбласть("Ответственный");
		Область.Параметры.Должность = Шапка.Должность;
		Область.Параметры.ФИО_Ответственного = Шапка.КонтактноеЛицо;	
		ТабличныйДокумент.Вывести(Область);
		//Конец вывода документа
		
        // В табличном документе необходимо задать имя области, в которую был 
        // выведен объект. Нужно для возможности печати комплектов документов.
        УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
            НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);

	КонецЦикла;

	Возврат ТабличныйДокумент;
	
КонецФункции 

Функция ФамилияИО(ПолноеФИО) Экспорт
	ПервПроб = Найти(ПолноеФИО," ");
	Если ПервПроб=0 Тогда
		Возврат ПолноеФИО;
	Иначе
		Фамилия = Лев(ПолноеФИО,ПервПроб);
		ИО = Сред(ПолноеФИО,ПервПроб+1);
		ИО = СокрЛ(ИО);
		Имя = Лев(ИО,1)+".";
		ВтПроб = Найти(ИО," ");
		Если ВтПроб=0 Тогда
			Возврат Фамилия+Имя;
		Иначе
			Возврат Фамилия+Имя+" "+Лев(СокрЛ(Сред(ИО,ВтПроб+1)),1)+".";
		КонецЕсли;
	КонецЕсли;
КонецФункции
